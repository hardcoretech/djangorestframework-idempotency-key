# Generated by Django 3.0.3 on 2022-04-13 07:54

from django.db import migrations, models


def remove_duplicated_records(apps, schema_editor):
    IdempotencyKey = apps.get_model('rest_framework_idempotency_key', 'IdempotencyKey')
    existed_keys = set()
    for id_key in IdempotencyKey.objects.all():
        if id_key.idempotency_key in existed_keys:
            id_key.delete()
        else:
            existed_keys.add(id_key.idempotency_key)


class Migration(migrations.Migration):

    dependencies = [
        ('rest_framework_idempotency_key', '0002_alter_idempotencykey_user'),
    ]

    operations = [
        migrations.RunPython(remove_duplicated_records, migrations.RunPython.noop),
        migrations.AlterField(
            model_name='idempotencykey',
            name='user',
            field=models.IntegerField(null=True),
        ),
        migrations.RemoveConstraint(
            model_name='idempotencykey',
            name='Unique IdempotencyKey (user, idempotency_key)',
        ),
        migrations.RemoveField(
            model_name='idempotencykey',
            name='user',
        ),
        migrations.AddConstraint(
            model_name='idempotencykey',
            constraint=models.UniqueConstraint(
                fields=('idempotency_key',), name='Unique IdempotencyKey (idempotency_key)'
            ),
        ),
    ]
